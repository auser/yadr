# Ring the bell if any background window rang a bellset -g bell-action any# Default termtype. If the rcfile sets $TERM, that overrides this value.set -g default-terminal screen-256color# set -g default-terminal "screen-256color"#set-option -g default-command "reattach-to-user-namespace -l $SHELL -l"# Keep your finger on ctrl, or don'tbind-key ^D detach-client# Create splits and vertical splitsbind-key v split-window -hbind-key ^V split-window -hbind-key s split-windowbind-key ^S split-window# Pane resize in all four directions using vi bindings.# Can use these raw but I map them to shift-ctrl-<h,j,k,l> in iTerm.bind-key J resize-pane -D 10bind-key K resize-pane -U 10bind-key H resize-pane -L 10bind-key L resize-pane -R 10# Use vi keybindings for tmux commandline input.# Note that to get command mode you need to hit ESC twice...set -g status-keys vi # Use vi keybindings in copy and choice modessetw -g mode-keys vi# # easily toggle synchronization (mnemonic: e is for echo)# sends input to all panes in a given window.bind e setw synchronize-panes onbind E setw synchronize-panes off# set first window to index 1 (not 0) to map more to the keyboard layout...set -g base-index 1# color scheme (styled as vim-powerline)set -g status-left-length 52set -g status-right-length 451set -g status-fg whiteset -g status-bg colour234set -g pane-border-fg colour245set -g pane-active-border-fg colour39set -g message-fg colour16set -g message-bg colour221set -g message-attr boldset -g status-left '#[fg=colour235,bg=colour252,bold] ❐ #S #[fg=colour252,bg=colour238,nobold]⮀#[fg=colour245,bg=colour238,bold] #(whoami) #[fg=colour238,bg=colour234,nobold]⮀'set -g window-status-format "#[fg=colour235,bg=colour252,bold] #I #W "#set -g window-status-current-format "#[fg=colour234,bg=colour39]⮀#[fg=colour25,bg=colour39,noreverse,bold] #I ⮁ #W #[fg=colour39,bg=colour234,nobold]⮀"#set -g window-status-current-format "#[fg=colour234,bg=colour39]⮀#[fg=black,bg=colour39,noreverse,bold] #I ⮁ #W #[fg=colour39,bg=colour234,nobold]⮀"set -g window-status-current-format "#[fg=colour234,bg=colour39]⮀#[fg=black,bg=colour39,noreverse,bold] #I: #W #[fg=colour39,bg=colour234,nobold]⮀"# Patch for OS X pbpaste and pbcopy under tmux.# set-option -g default-command "reattach-to-user-namespace -l zsh"# Screen like bindingunbind C-bset -g prefix C-a# No escape time for vi modeset -sg escape-time 0# Screen like binding for last windowunbind lbind C-a last-window# Bigger historyset -g history-limit 10000,V
config.assets.enabled ,v
config.assets.enabled =,v
config.,v
120,v
.,v
33,v
120		,v
33.33.33.120		zen.dev33.33.33.120		manage.zen.dev,V
33.33.33.120		zen.dev3,v
1,V
192.168.33.10		zen.dev,V
	,v
v,v
e,v
d,v
n,v
z,v
manage,v
3,v
zen,v
#,v
  config.vm.,V
    "modifyvm", :id,,V
,V
  config.vm.provision :shell, :path => ,V
j,V
git@github.com:att-innovate/mhealth.git,v
 ,v
base,v
\curl -L https://get.rvm.io | bash -s stable --rails,v
. ~/nvm/nvm.sh,v
random,v
  file_operation(Dir.glob('tmux.conf')) if want_to_install?('tmux configuration'),V
plugin,v
for config_file ($HOME/.yadr/zsh/*.zsh) source $config_file,V
for config_file ($HOME/.yadr/zsh/*.zsh) source $config_file,v
echo "prompt skwp" > ~/.zsh.after/prompt.zsh,v
echo $yadr,V
autoload -U promptinit,V
:,v
command not found: promptinit,v
git remote set-url origin git@github.com:auser/auser.ruhoh.com.gitgit push origin master,V
:syntax enable,v
",v
8,v
backbone,v
set -g default-terminal "xterm",v
http://www.pomodorotechnique.com/book/,v
B,v
app,v
/,v
	'app/app',V
,,v
		app: "app/app",V
p,v
a,v
	'app/app'	], function(_, Backbone, App) {		App.initialize();});,V
16,v
dddddd,v
eeefff,v
ffffff,v
eee,v
white,v
0,v
border-radius,v
	.btn {  	.gradient(#dddddd, #eeeeee, #dddddd);	},V
fff,v
  .gradient(#dddddd, #eeeeee, #dddddd);,V
.gradient(#dddddd, #eeeeee, #dddddd);,v
},v
404040,v
				.rounded(5px);,V
				background: white;,V
				padding: 5px;,V
20px -10px 10px;,v
        .column(2);,V
-,v
			margin-bottom: 20px;,V
1,v
2,v
},V
.gradient(@color1, @color2, @pos1: left top, @pos2: left bottom, @type: linear, @extra: "") {  background: -moz-linear-gradient(top, @color1, @color2) @extra;  background: -webkit-gradient(@type, @pos1, @pos2, from(@color1), to(@color2)) @extra;  -ms-filter: "progid:DXImageTransform.Microsoft.gradient(startColorstr=@color1, endColorstr=@@color2)";,V
	background-image: linear-gradient(@origin, @start, @stop);,V
.gradient (@origin: left, @start: #ffffff, @stop: #000000) {	background-color: @start;	background-image: -webkit-linear-gradient(@origin, @start, @stop);	background-image: -moz-linear-gradient(@origin, @start, @stop);	background-image: -o-linear-gradient(@origin, @start, @stop);	background-image: -ms-linear-gradient(@origin, @start, @stop);,V
e9e9e9,v
x,v
7,v
      .column(4);,V
5,v
      .clearfix;,V
s,v
		background: blue;,V
	.row();,V
	.grid(16);,V
	.grid-container();,V
 ,V
 */,V
/** * The following 2 mixins would ideally be defined inside the .grid-container * mixin since it isn't relevant in any other scope. There is a bug in LESS * that makes it impossible to nest mixins that don't take arguments so they * are defined globally for now.,V
 * The first grid inside another grid.,V
